
pawan.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000080  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  000000d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  000000f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000008d  00000000  00000000  0000010f  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000059  00000000  00000000  0000019c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000000ce  00000000  00000000  000001f5  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  000002c4  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000005a  00000000  00000000  000002e4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	02 d0       	rcall	.+4      	; 0x38 <main>
  34:	23 c0       	rjmp	.+70     	; 0x7c <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <main>:
#include<avr/io.h>
#include<util/delay.h>
void main()
{
DDRB = 0b00011110;
  38:	8e e1       	ldi	r24, 0x1E	; 30
  3a:	87 bb       	out	0x17, r24	; 23
DDRC = 0b1110110;
  3c:	86 e7       	ldi	r24, 0x76	; 118
  3e:	84 bb       	out	0x14, r24	; 20
{
PORTB = 0b00000000;
}
if ((ls==0b0000001)&&(rs==0b0000000))
{
PORTB = 0b00010000;
  40:	60 e1       	ldi	r22, 0x10	; 16
{
ls = (PINC & 0b0000001);
rs = (PINC & 0b0001000);
if ((ls == 0b0000001)&&(rs==0b0001000))
{
PORTB = 0b00010010;
  42:	52 e1       	ldi	r21, 0x12	; 18
{
PORTB = 0b00010000;
}
if ((ls==0b0000000)&&(rs==0b0001000))
{
PORTB = 0b00000010;
  44:	42 e0       	ldi	r20, 0x02	; 2
DDRB = 0b00011110;
DDRC = 0b1110110;
int ls,rs;
while(1)
{
ls = (PINC & 0b0000001);
  46:	93 b3       	in	r25, 0x13	; 19
rs = (PINC & 0b0001000);
  48:	83 b3       	in	r24, 0x13	; 19
  4a:	28 2f       	mov	r18, r24
  4c:	30 e0       	ldi	r19, 0x00	; 0
  4e:	28 70       	andi	r18, 0x08	; 8
  50:	30 70       	andi	r19, 0x00	; 0
if ((ls == 0b0000001)&&(rs==0b0001000))
  52:	90 ff       	sbrs	r25, 0
  54:	05 c0       	rjmp	.+10     	; 0x60 <__SREG__+0x21>
  56:	28 30       	cpi	r18, 0x08	; 8
  58:	31 05       	cpc	r19, r1
  5a:	39 f4       	brne	.+14     	; 0x6a <__SREG__+0x2b>
{
PORTB = 0b00010010;
  5c:	58 bb       	out	0x18, r21	; 24
  5e:	f3 cf       	rjmp	.-26     	; 0x46 <__SREG__+0x7>
}
if ((ls==0b0000000)&&(rs==0b0000000))
  60:	21 15       	cp	r18, r1
  62:	31 05       	cpc	r19, r1
  64:	31 f4       	brne	.+12     	; 0x72 <__SREG__+0x33>
{
PORTB = 0b00000000;
  66:	18 ba       	out	0x18, r1	; 24
  68:	ee cf       	rjmp	.-36     	; 0x46 <__SREG__+0x7>
}
if ((ls==0b0000001)&&(rs==0b0000000))
  6a:	23 2b       	or	r18, r19
  6c:	61 f7       	brne	.-40     	; 0x46 <__SREG__+0x7>
{
PORTB = 0b00010000;
  6e:	68 bb       	out	0x18, r22	; 24
  70:	ea cf       	rjmp	.-44     	; 0x46 <__SREG__+0x7>
}
if ((ls==0b0000000)&&(rs==0b0001000))
  72:	28 30       	cpi	r18, 0x08	; 8
  74:	31 05       	cpc	r19, r1
  76:	39 f7       	brne	.-50     	; 0x46 <__SREG__+0x7>
{
PORTB = 0b00000010;
  78:	48 bb       	out	0x18, r20	; 24
  7a:	e5 cf       	rjmp	.-54     	; 0x46 <__SREG__+0x7>

0000007c <_exit>:
  7c:	f8 94       	cli

0000007e <__stop_program>:
  7e:	ff cf       	rjmp	.-2      	; 0x7e <__stop_program>
