
edge.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000008f6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000108  00800060  000008f6  0000096a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .debug_aranges 00000100  00000000  00000000  00000a72  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 0000014a  00000000  00000000  00000b72  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00001602  00000000  00000000  00000cbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000bf9  00000000  00000000  000022be  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000c86  00000000  00000000  00002eb7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000110  00000000  00000000  00003b40  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000282  00000000  00000000  00003c50  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000008b0  00000000  00000000  00003ed2  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000050  00000000  00000000  00004782  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	24 c0       	rjmp	.+72     	; 0x4c <__bad_interrupt>
   4:	23 c0       	rjmp	.+70     	; 0x4c <__bad_interrupt>
   6:	22 c0       	rjmp	.+68     	; 0x4c <__bad_interrupt>
   8:	21 c0       	rjmp	.+66     	; 0x4c <__bad_interrupt>
   a:	20 c0       	rjmp	.+64     	; 0x4c <__bad_interrupt>
   c:	1f c0       	rjmp	.+62     	; 0x4c <__bad_interrupt>
   e:	1e c0       	rjmp	.+60     	; 0x4c <__bad_interrupt>
  10:	1d c0       	rjmp	.+58     	; 0x4c <__bad_interrupt>
  12:	1c c0       	rjmp	.+56     	; 0x4c <__bad_interrupt>
  14:	1b c0       	rjmp	.+54     	; 0x4c <__bad_interrupt>
  16:	1a c0       	rjmp	.+52     	; 0x4c <__bad_interrupt>
  18:	19 c0       	rjmp	.+50     	; 0x4c <__bad_interrupt>
  1a:	18 c0       	rjmp	.+48     	; 0x4c <__bad_interrupt>
  1c:	17 c0       	rjmp	.+46     	; 0x4c <__bad_interrupt>
  1e:	16 c0       	rjmp	.+44     	; 0x4c <__bad_interrupt>
  20:	15 c0       	rjmp	.+42     	; 0x4c <__bad_interrupt>
  22:	14 c0       	rjmp	.+40     	; 0x4c <__bad_interrupt>
  24:	13 c0       	rjmp	.+38     	; 0x4c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	11 e0       	ldi	r17, 0x01	; 1
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	e6 ef       	ldi	r30, 0xF6	; 246
  3a:	f8 e0       	ldi	r31, 0x08	; 8
  3c:	02 c0       	rjmp	.+4      	; 0x42 <.do_copy_data_start>

0000003e <.do_copy_data_loop>:
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0

00000042 <.do_copy_data_start>:
  42:	a8 36       	cpi	r26, 0x68	; 104
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <.do_copy_data_loop>
  48:	2e d0       	rcall	.+92     	; 0xa6 <main>
  4a:	53 c4       	rjmp	.+2214   	; 0x8f2 <_exit>

0000004c <__bad_interrupt>:
  4c:	d9 cf       	rjmp	.-78     	; 0x0 <__vectors>

0000004e <wait>:


void wait(float sec);
void wait(float sec)
{
  4e:	cf 92       	push	r12
  50:	df 92       	push	r13
  52:	ef 92       	push	r14
  54:	ff 92       	push	r15
  56:	0f 93       	push	r16
  58:	1f 93       	push	r17
  5a:	cf 93       	push	r28
  5c:	df 93       	push	r29
for(int i=0;i<(int)46*sec;i++)
  5e:	20 e0       	ldi	r18, 0x00	; 0
  60:	30 e0       	ldi	r19, 0x00	; 0
  62:	48 e3       	ldi	r20, 0x38	; 56
  64:	52 e4       	ldi	r21, 0x42	; 66
  66:	9f d0       	rcall	.+318    	; 0x1a6 <__mulsf3>
  68:	7b 01       	movw	r14, r22
  6a:	8c 01       	movw	r16, r24
  6c:	c0 e0       	ldi	r28, 0x00	; 0
  6e:	d0 e0       	ldi	r29, 0x00	; 0
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  70:	cc 24       	eor	r12, r12
  72:	dd 24       	eor	r13, r13
  74:	04 c0       	rjmp	.+8      	; 0x7e <wait+0x30>
  76:	c6 01       	movw	r24, r12
  78:	01 97       	sbiw	r24, 0x01	; 1
  7a:	f1 f7       	brne	.-4      	; 0x78 <wait+0x2a>
  7c:	21 96       	adiw	r28, 0x01	; 1
  7e:	be 01       	movw	r22, r28
  80:	88 27       	eor	r24, r24
  82:	77 fd       	sbrc	r23, 7
  84:	80 95       	com	r24
  86:	98 2f       	mov	r25, r24
  88:	ae d1       	rcall	.+860    	; 0x3e6 <__floatsisf>
  8a:	a8 01       	movw	r20, r16
  8c:	97 01       	movw	r18, r14
  8e:	80 d1       	rcall	.+768    	; 0x390 <__ltsf2>
  90:	87 fd       	sbrc	r24, 7
  92:	f1 cf       	rjmp	.-30     	; 0x76 <wait+0x28>
_delay_loop_2(0);
  94:	df 91       	pop	r29
  96:	cf 91       	pop	r28
  98:	1f 91       	pop	r17
  9a:	0f 91       	pop	r16
  9c:	ff 90       	pop	r15
  9e:	ef 90       	pop	r14
  a0:	df 90       	pop	r13
  a2:	cf 90       	pop	r12
  a4:	08 95       	ret

000000a6 <main>:
#define F_CPU 12000000UL
#include<avr/io.h>
#include<util/delay.h>
#include "robosapiens.c"
int main(void)
{
  a6:	0f 93       	push	r16
  a8:	1f 93       	push	r17
	DDRD=0b11111111;	  		//set PD4 as output bit
  aa:	8f ef       	ldi	r24, 0xFF	; 255
  ac:	81 bb       	out	0x11, r24	; 17
	DDRC=0b0000000;   			//set PORTC as input port
  ae:	14 ba       	out	0x14, r1	; 20
	DDRB=0b00011110;  			//PB1, PB2, PB3, PB4 as output port
  b0:	8e e1       	ldi	r24, 0x1E	; 30
  b2:	87 bb       	out	0x17, r24	; 23
	ls=(PINC&0b0001000);   		// acquire only right sensor status connected at PC3
	PORTD = ~PORTD;		
		
		if((rs==0b0000000)||(ls==0b0000000)) 
		{
		PORTD=(1<<4);
  b4:	a0 e1       	ldi	r26, 0x10	; 16
		if((rs==0b0000001)&&(ls==0b0000000))  //check sensor status for left sensor=ON and
		                                     // right sensor=OFF
		{
			
			PORTD = (1<<4);
			PORTB=0b00001100;    //backward
  b6:	bc e0       	ldi	r27, 0x0C	; 12
  b8:	60 e0       	ldi	r22, 0x00	; 0
  ba:	70 e0       	ldi	r23, 0x00	; 0

			PORTB=0b00000000;  	//stop
			PORTD = (1<<4);
			PORTB=0b00001100;  	//backward
			wait(.8);
     		PORTB=0b00000010;  	//turn right or user can define their own turn
  bc:	12 e0       	ldi	r17, 0x02	; 2
		

        if((rs==0b0000001)&&(ls==0b0001000)) //check sensor status for both sensor ON 
		{

			PORTB=0b00010010;  //move forward
  be:	02 e1       	ldi	r16, 0x12	; 18
					  			// acquire the left sensor status in ls and right sensor
					  			// status in rs 
	while(1)          			// create infinite loop
	{
	
	rs=(PINC&0b0000001);   		//acquire only left sensor status connected at PC0
  c0:	83 b3       	in	r24, 0x13	; 19
  c2:	90 e0       	ldi	r25, 0x00	; 0
	ls=(PINC&0b0001000);   		// acquire only right sensor status connected at PC3
  c4:	23 b3       	in	r18, 0x13	; 19
  c6:	42 2f       	mov	r20, r18
  c8:	50 e0       	ldi	r21, 0x00	; 0
  ca:	48 70       	andi	r20, 0x08	; 8
  cc:	50 70       	andi	r21, 0x00	; 0
	PORTD = ~PORTD;		
  ce:	22 b3       	in	r18, 0x12	; 18
  d0:	20 95       	com	r18
  d2:	22 bb       	out	0x12, r18	; 18
		
		if((rs==0b0000000)||(ls==0b0000000)) 
  d4:	9c 01       	movw	r18, r24
  d6:	21 70       	andi	r18, 0x01	; 1
  d8:	30 70       	andi	r19, 0x00	; 0
  da:	80 ff       	sbrs	r24, 0
  dc:	03 c0       	rjmp	.+6      	; 0xe4 <main+0x3e>
  de:	41 15       	cp	r20, r1
  e0:	51 05       	cpc	r21, r1
  e2:	01 f5       	brne	.+64     	; 0x124 <main+0x7e>
		{
		PORTD=(1<<4);
  e4:	a2 bb       	out	0x12, r26	; 18
		}		

		if((rs==0b0000000)&&(ls==0b0000000)) //check sensor status for both sensor OFF 
  e6:	23 2b       	or	r18, r19
  e8:	09 f5       	brne	.+66     	; 0x12c <main+0x86>
  ea:	41 15       	cp	r20, r1
  ec:	51 05       	cpc	r21, r1
  ee:	09 f0       	breq	.+2      	; 0xf2 <main+0x4c>
  f0:	38 c0       	rjmp	.+112    	; 0x162 <main+0xbc>
		{

			PORTB=0b00000000;  	//stop
  f2:	18 ba       	out	0x18, r1	; 24
			PORTD = (1<<4);
  f4:	a2 bb       	out	0x12, r26	; 18
			PORTB=0b00001100;  	//backward
  f6:	b8 bb       	out	0x18, r27	; 24
  f8:	80 e0       	ldi	r24, 0x00	; 0
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	04 c0       	rjmp	.+8      	; 0x106 <main+0x60>
  fe:	fb 01       	movw	r30, r22
 100:	31 97       	sbiw	r30, 0x01	; 1
 102:	f1 f7       	brne	.-4      	; 0x100 <main+0x5a>


void wait(float sec);
void wait(float sec)
{
for(int i=0;i<(int)46*sec;i++)
 104:	01 96       	adiw	r24, 0x01	; 1
 106:	85 32       	cpi	r24, 0x25	; 37
 108:	91 05       	cpc	r25, r1
 10a:	c9 f7       	brne	.-14     	; 0xfe <main+0x58>
			wait(.8);
     		PORTB=0b00000010;  	//turn right or user can define their own turn
 10c:	18 bb       	out	0x18, r17	; 24
 10e:	80 e0       	ldi	r24, 0x00	; 0
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	04 c0       	rjmp	.+8      	; 0x11c <main+0x76>
 114:	fb 01       	movw	r30, r22
 116:	31 97       	sbiw	r30, 0x01	; 1
 118:	f1 f7       	brne	.-4      	; 0x116 <main+0x70>
 11a:	01 96       	adiw	r24, 0x01	; 1
 11c:	85 32       	cpi	r24, 0x25	; 37
 11e:	91 05       	cpc	r25, r1
 120:	c9 f7       	brne	.-14     	; 0x114 <main+0x6e>
 122:	1f c0       	rjmp	.+62     	; 0x162 <main+0xbc>
			ls=0;              	//set sensor status off
			rs=0;              	//set sensor status off
		
		}

		if((rs==0b0000001)&&(ls==0b0000000))  //check sensor status for left sensor=ON and
 124:	21 30       	cpi	r18, 0x01	; 1
 126:	31 05       	cpc	r19, r1
 128:	e1 f4       	brne	.+56     	; 0x162 <main+0xbc>
 12a:	37 c0       	rjmp	.+110    	; 0x19a <main+0xf4>
 12c:	41 15       	cp	r20, r1
 12e:	51 05       	cpc	r21, r1
 130:	a1 f5       	brne	.+104    	; 0x19a <main+0xf4>
		                                     // right sensor=OFF
		{
			
			PORTD = (1<<4);
 132:	a2 bb       	out	0x12, r26	; 18
			PORTB=0b00001100;    //backward
 134:	b8 bb       	out	0x18, r27	; 24
 136:	80 e0       	ldi	r24, 0x00	; 0
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	04 c0       	rjmp	.+8      	; 0x144 <main+0x9e>
 13c:	fb 01       	movw	r30, r22
 13e:	31 97       	sbiw	r30, 0x01	; 1
 140:	f1 f7       	brne	.-4      	; 0x13e <main+0x98>
 142:	01 96       	adiw	r24, 0x01	; 1
 144:	85 32       	cpi	r24, 0x25	; 37
 146:	91 05       	cpc	r25, r1
 148:	c9 f7       	brne	.-14     	; 0x13c <main+0x96>
			wait(.8);
			PORTB=0b00010000;    //turn right to avoid the edge
 14a:	a8 bb       	out	0x18, r26	; 24
 14c:	80 e0       	ldi	r24, 0x00	; 0
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	04 c0       	rjmp	.+8      	; 0x15a <main+0xb4>
 152:	fb 01       	movw	r30, r22
 154:	31 97       	sbiw	r30, 0x01	; 1
 156:	f1 f7       	brne	.-4      	; 0x154 <main+0xae>
 158:	01 96       	adiw	r24, 0x01	; 1
 15a:	85 32       	cpi	r24, 0x25	; 37
 15c:	91 05       	cpc	r25, r1
 15e:	c9 f7       	brne	.-14     	; 0x152 <main+0xac>
 160:	af cf       	rjmp	.-162    	; 0xc0 <main+0x1a>
			rs=0; 				 //set sensor status off
				            
		}
	
	
		if((rs==0b0000000)&&(ls==0b0001000))  //check sensor status for left sensor=OFF and
 162:	48 30       	cpi	r20, 0x08	; 8
 164:	51 05       	cpc	r21, r1
 166:	09 f0       	breq	.+2      	; 0x16a <main+0xc4>
 168:	ab cf       	rjmp	.-170    	; 0xc0 <main+0x1a>
		                                     // right sensor=ON
		{
			 
			PORTD = (1<<4);
 16a:	a2 bb       	out	0x12, r26	; 18
			PORTB=0b00001100;    //backward
 16c:	b8 bb       	out	0x18, r27	; 24
 16e:	80 e0       	ldi	r24, 0x00	; 0
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	04 c0       	rjmp	.+8      	; 0x17c <main+0xd6>
 174:	fb 01       	movw	r30, r22
 176:	31 97       	sbiw	r30, 0x01	; 1
 178:	f1 f7       	brne	.-4      	; 0x176 <main+0xd0>
 17a:	01 96       	adiw	r24, 0x01	; 1
 17c:	85 32       	cpi	r24, 0x25	; 37
 17e:	91 05       	cpc	r25, r1
 180:	c9 f7       	brne	.-14     	; 0x174 <main+0xce>
			wait(.8);
			PORTB=0b00000010;    //turn left to avoid the edge
 182:	18 bb       	out	0x18, r17	; 24
 184:	80 e0       	ldi	r24, 0x00	; 0
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	04 c0       	rjmp	.+8      	; 0x192 <main+0xec>
 18a:	fb 01       	movw	r30, r22
 18c:	31 97       	sbiw	r30, 0x01	; 1
 18e:	f1 f7       	brne	.-4      	; 0x18c <main+0xe6>
 190:	01 96       	adiw	r24, 0x01	; 1
 192:	85 32       	cpi	r24, 0x25	; 37
 194:	91 05       	cpc	r25, r1
 196:	c9 f7       	brne	.-14     	; 0x18a <main+0xe4>
 198:	93 cf       	rjmp	.-218    	; 0xc0 <main+0x1a>
			 
		}
	
		

        if((rs==0b0000001)&&(ls==0b0001000)) //check sensor status for both sensor ON 
 19a:	48 30       	cpi	r20, 0x08	; 8
 19c:	51 05       	cpc	r21, r1
 19e:	09 f0       	breq	.+2      	; 0x1a2 <main+0xfc>
 1a0:	8f cf       	rjmp	.-226    	; 0xc0 <main+0x1a>
		{

			PORTB=0b00010010;  //move forward
 1a2:	08 bb       	out	0x18, r16	; 24
 1a4:	8d cf       	rjmp	.-230    	; 0xc0 <main+0x1a>

000001a6 <__mulsf3>:
 1a6:	a0 e2       	ldi	r26, 0x20	; 32
 1a8:	b0 e0       	ldi	r27, 0x00	; 0
 1aa:	e8 ed       	ldi	r30, 0xD8	; 216
 1ac:	f0 e0       	ldi	r31, 0x00	; 0
 1ae:	6a c3       	rjmp	.+1748   	; 0x884 <__prologue_saves__>
 1b0:	69 83       	std	Y+1, r22	; 0x01
 1b2:	7a 83       	std	Y+2, r23	; 0x02
 1b4:	8b 83       	std	Y+3, r24	; 0x03
 1b6:	9c 83       	std	Y+4, r25	; 0x04
 1b8:	2d 83       	std	Y+5, r18	; 0x05
 1ba:	3e 83       	std	Y+6, r19	; 0x06
 1bc:	4f 83       	std	Y+7, r20	; 0x07
 1be:	58 87       	std	Y+8, r21	; 0x08
 1c0:	ce 01       	movw	r24, r28
 1c2:	01 96       	adiw	r24, 0x01	; 1
 1c4:	be 01       	movw	r22, r28
 1c6:	67 5f       	subi	r22, 0xF7	; 247
 1c8:	7f 4f       	sbci	r23, 0xFF	; 255
 1ca:	8b d2       	rcall	.+1302   	; 0x6e2 <__unpack_f>
 1cc:	ce 01       	movw	r24, r28
 1ce:	05 96       	adiw	r24, 0x05	; 5
 1d0:	be 01       	movw	r22, r28
 1d2:	6f 5e       	subi	r22, 0xEF	; 239
 1d4:	7f 4f       	sbci	r23, 0xFF	; 255
 1d6:	85 d2       	rcall	.+1290   	; 0x6e2 <__unpack_f>
 1d8:	99 85       	ldd	r25, Y+9	; 0x09
 1da:	92 30       	cpi	r25, 0x02	; 2
 1dc:	88 f0       	brcs	.+34     	; 0x200 <__mulsf3+0x5a>
 1de:	89 89       	ldd	r24, Y+17	; 0x11
 1e0:	82 30       	cpi	r24, 0x02	; 2
 1e2:	c8 f0       	brcs	.+50     	; 0x216 <__mulsf3+0x70>
 1e4:	94 30       	cpi	r25, 0x04	; 4
 1e6:	19 f4       	brne	.+6      	; 0x1ee <__mulsf3+0x48>
 1e8:	82 30       	cpi	r24, 0x02	; 2
 1ea:	51 f4       	brne	.+20     	; 0x200 <__mulsf3+0x5a>
 1ec:	04 c0       	rjmp	.+8      	; 0x1f6 <__mulsf3+0x50>
 1ee:	84 30       	cpi	r24, 0x04	; 4
 1f0:	29 f4       	brne	.+10     	; 0x1fc <__mulsf3+0x56>
 1f2:	92 30       	cpi	r25, 0x02	; 2
 1f4:	81 f4       	brne	.+32     	; 0x216 <__mulsf3+0x70>
 1f6:	80 e6       	ldi	r24, 0x60	; 96
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	c6 c0       	rjmp	.+396    	; 0x388 <__mulsf3+0x1e2>
 1fc:	92 30       	cpi	r25, 0x02	; 2
 1fe:	49 f4       	brne	.+18     	; 0x212 <__mulsf3+0x6c>
 200:	20 e0       	ldi	r18, 0x00	; 0
 202:	9a 85       	ldd	r25, Y+10	; 0x0a
 204:	8a 89       	ldd	r24, Y+18	; 0x12
 206:	98 13       	cpse	r25, r24
 208:	21 e0       	ldi	r18, 0x01	; 1
 20a:	2a 87       	std	Y+10, r18	; 0x0a
 20c:	ce 01       	movw	r24, r28
 20e:	09 96       	adiw	r24, 0x09	; 9
 210:	bb c0       	rjmp	.+374    	; 0x388 <__mulsf3+0x1e2>
 212:	82 30       	cpi	r24, 0x02	; 2
 214:	49 f4       	brne	.+18     	; 0x228 <__mulsf3+0x82>
 216:	20 e0       	ldi	r18, 0x00	; 0
 218:	9a 85       	ldd	r25, Y+10	; 0x0a
 21a:	8a 89       	ldd	r24, Y+18	; 0x12
 21c:	98 13       	cpse	r25, r24
 21e:	21 e0       	ldi	r18, 0x01	; 1
 220:	2a 8b       	std	Y+18, r18	; 0x12
 222:	ce 01       	movw	r24, r28
 224:	41 96       	adiw	r24, 0x11	; 17
 226:	b0 c0       	rjmp	.+352    	; 0x388 <__mulsf3+0x1e2>
 228:	2d 84       	ldd	r2, Y+13	; 0x0d
 22a:	3e 84       	ldd	r3, Y+14	; 0x0e
 22c:	4f 84       	ldd	r4, Y+15	; 0x0f
 22e:	58 88       	ldd	r5, Y+16	; 0x10
 230:	6d 88       	ldd	r6, Y+21	; 0x15
 232:	7e 88       	ldd	r7, Y+22	; 0x16
 234:	8f 88       	ldd	r8, Y+23	; 0x17
 236:	98 8c       	ldd	r9, Y+24	; 0x18
 238:	ee 24       	eor	r14, r14
 23a:	ff 24       	eor	r15, r15
 23c:	87 01       	movw	r16, r14
 23e:	aa 24       	eor	r10, r10
 240:	bb 24       	eor	r11, r11
 242:	65 01       	movw	r12, r10
 244:	40 e0       	ldi	r20, 0x00	; 0
 246:	50 e0       	ldi	r21, 0x00	; 0
 248:	60 e0       	ldi	r22, 0x00	; 0
 24a:	70 e0       	ldi	r23, 0x00	; 0
 24c:	e0 e0       	ldi	r30, 0x00	; 0
 24e:	f0 e0       	ldi	r31, 0x00	; 0
 250:	c1 01       	movw	r24, r2
 252:	81 70       	andi	r24, 0x01	; 1
 254:	90 70       	andi	r25, 0x00	; 0
 256:	89 2b       	or	r24, r25
 258:	e9 f0       	breq	.+58     	; 0x294 <__mulsf3+0xee>
 25a:	e6 0c       	add	r14, r6
 25c:	f7 1c       	adc	r15, r7
 25e:	08 1d       	adc	r16, r8
 260:	19 1d       	adc	r17, r9
 262:	9a 01       	movw	r18, r20
 264:	ab 01       	movw	r20, r22
 266:	2a 0d       	add	r18, r10
 268:	3b 1d       	adc	r19, r11
 26a:	4c 1d       	adc	r20, r12
 26c:	5d 1d       	adc	r21, r13
 26e:	80 e0       	ldi	r24, 0x00	; 0
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	a0 e0       	ldi	r26, 0x00	; 0
 274:	b0 e0       	ldi	r27, 0x00	; 0
 276:	e6 14       	cp	r14, r6
 278:	f7 04       	cpc	r15, r7
 27a:	08 05       	cpc	r16, r8
 27c:	19 05       	cpc	r17, r9
 27e:	20 f4       	brcc	.+8      	; 0x288 <__mulsf3+0xe2>
 280:	81 e0       	ldi	r24, 0x01	; 1
 282:	90 e0       	ldi	r25, 0x00	; 0
 284:	a0 e0       	ldi	r26, 0x00	; 0
 286:	b0 e0       	ldi	r27, 0x00	; 0
 288:	ba 01       	movw	r22, r20
 28a:	a9 01       	movw	r20, r18
 28c:	48 0f       	add	r20, r24
 28e:	59 1f       	adc	r21, r25
 290:	6a 1f       	adc	r22, r26
 292:	7b 1f       	adc	r23, r27
 294:	aa 0c       	add	r10, r10
 296:	bb 1c       	adc	r11, r11
 298:	cc 1c       	adc	r12, r12
 29a:	dd 1c       	adc	r13, r13
 29c:	97 fe       	sbrs	r9, 7
 29e:	08 c0       	rjmp	.+16     	; 0x2b0 <__mulsf3+0x10a>
 2a0:	81 e0       	ldi	r24, 0x01	; 1
 2a2:	90 e0       	ldi	r25, 0x00	; 0
 2a4:	a0 e0       	ldi	r26, 0x00	; 0
 2a6:	b0 e0       	ldi	r27, 0x00	; 0
 2a8:	a8 2a       	or	r10, r24
 2aa:	b9 2a       	or	r11, r25
 2ac:	ca 2a       	or	r12, r26
 2ae:	db 2a       	or	r13, r27
 2b0:	31 96       	adiw	r30, 0x01	; 1
 2b2:	e0 32       	cpi	r30, 0x20	; 32
 2b4:	f1 05       	cpc	r31, r1
 2b6:	49 f0       	breq	.+18     	; 0x2ca <__mulsf3+0x124>
 2b8:	66 0c       	add	r6, r6
 2ba:	77 1c       	adc	r7, r7
 2bc:	88 1c       	adc	r8, r8
 2be:	99 1c       	adc	r9, r9
 2c0:	56 94       	lsr	r5
 2c2:	47 94       	ror	r4
 2c4:	37 94       	ror	r3
 2c6:	27 94       	ror	r2
 2c8:	c3 cf       	rjmp	.-122    	; 0x250 <__mulsf3+0xaa>
 2ca:	fa 85       	ldd	r31, Y+10	; 0x0a
 2cc:	ea 89       	ldd	r30, Y+18	; 0x12
 2ce:	2b 89       	ldd	r18, Y+19	; 0x13
 2d0:	3c 89       	ldd	r19, Y+20	; 0x14
 2d2:	8b 85       	ldd	r24, Y+11	; 0x0b
 2d4:	9c 85       	ldd	r25, Y+12	; 0x0c
 2d6:	28 0f       	add	r18, r24
 2d8:	39 1f       	adc	r19, r25
 2da:	2e 5f       	subi	r18, 0xFE	; 254
 2dc:	3f 4f       	sbci	r19, 0xFF	; 255
 2de:	17 c0       	rjmp	.+46     	; 0x30e <__mulsf3+0x168>
 2e0:	ca 01       	movw	r24, r20
 2e2:	81 70       	andi	r24, 0x01	; 1
 2e4:	90 70       	andi	r25, 0x00	; 0
 2e6:	89 2b       	or	r24, r25
 2e8:	61 f0       	breq	.+24     	; 0x302 <__mulsf3+0x15c>
 2ea:	16 95       	lsr	r17
 2ec:	07 95       	ror	r16
 2ee:	f7 94       	ror	r15
 2f0:	e7 94       	ror	r14
 2f2:	80 e0       	ldi	r24, 0x00	; 0
 2f4:	90 e0       	ldi	r25, 0x00	; 0
 2f6:	a0 e0       	ldi	r26, 0x00	; 0
 2f8:	b0 e8       	ldi	r27, 0x80	; 128
 2fa:	e8 2a       	or	r14, r24
 2fc:	f9 2a       	or	r15, r25
 2fe:	0a 2b       	or	r16, r26
 300:	1b 2b       	or	r17, r27
 302:	76 95       	lsr	r23
 304:	67 95       	ror	r22
 306:	57 95       	ror	r21
 308:	47 95       	ror	r20
 30a:	2f 5f       	subi	r18, 0xFF	; 255
 30c:	3f 4f       	sbci	r19, 0xFF	; 255
 30e:	77 fd       	sbrc	r23, 7
 310:	e7 cf       	rjmp	.-50     	; 0x2e0 <__mulsf3+0x13a>
 312:	0c c0       	rjmp	.+24     	; 0x32c <__mulsf3+0x186>
 314:	44 0f       	add	r20, r20
 316:	55 1f       	adc	r21, r21
 318:	66 1f       	adc	r22, r22
 31a:	77 1f       	adc	r23, r23
 31c:	17 fd       	sbrc	r17, 7
 31e:	41 60       	ori	r20, 0x01	; 1
 320:	ee 0c       	add	r14, r14
 322:	ff 1c       	adc	r15, r15
 324:	00 1f       	adc	r16, r16
 326:	11 1f       	adc	r17, r17
 328:	21 50       	subi	r18, 0x01	; 1
 32a:	30 40       	sbci	r19, 0x00	; 0
 32c:	40 30       	cpi	r20, 0x00	; 0
 32e:	90 e0       	ldi	r25, 0x00	; 0
 330:	59 07       	cpc	r21, r25
 332:	90 e0       	ldi	r25, 0x00	; 0
 334:	69 07       	cpc	r22, r25
 336:	90 e4       	ldi	r25, 0x40	; 64
 338:	79 07       	cpc	r23, r25
 33a:	60 f3       	brcs	.-40     	; 0x314 <__mulsf3+0x16e>
 33c:	2b 8f       	std	Y+27, r18	; 0x1b
 33e:	3c 8f       	std	Y+28, r19	; 0x1c
 340:	db 01       	movw	r26, r22
 342:	ca 01       	movw	r24, r20
 344:	8f 77       	andi	r24, 0x7F	; 127
 346:	90 70       	andi	r25, 0x00	; 0
 348:	a0 70       	andi	r26, 0x00	; 0
 34a:	b0 70       	andi	r27, 0x00	; 0
 34c:	80 34       	cpi	r24, 0x40	; 64
 34e:	91 05       	cpc	r25, r1
 350:	a1 05       	cpc	r26, r1
 352:	b1 05       	cpc	r27, r1
 354:	61 f4       	brne	.+24     	; 0x36e <__mulsf3+0x1c8>
 356:	47 fd       	sbrc	r20, 7
 358:	0a c0       	rjmp	.+20     	; 0x36e <__mulsf3+0x1c8>
 35a:	e1 14       	cp	r14, r1
 35c:	f1 04       	cpc	r15, r1
 35e:	01 05       	cpc	r16, r1
 360:	11 05       	cpc	r17, r1
 362:	29 f0       	breq	.+10     	; 0x36e <__mulsf3+0x1c8>
 364:	40 5c       	subi	r20, 0xC0	; 192
 366:	5f 4f       	sbci	r21, 0xFF	; 255
 368:	6f 4f       	sbci	r22, 0xFF	; 255
 36a:	7f 4f       	sbci	r23, 0xFF	; 255
 36c:	40 78       	andi	r20, 0x80	; 128
 36e:	1a 8e       	std	Y+26, r1	; 0x1a
 370:	fe 17       	cp	r31, r30
 372:	11 f0       	breq	.+4      	; 0x378 <__mulsf3+0x1d2>
 374:	81 e0       	ldi	r24, 0x01	; 1
 376:	8a 8f       	std	Y+26, r24	; 0x1a
 378:	4d 8f       	std	Y+29, r20	; 0x1d
 37a:	5e 8f       	std	Y+30, r21	; 0x1e
 37c:	6f 8f       	std	Y+31, r22	; 0x1f
 37e:	78 a3       	std	Y+32, r23	; 0x20
 380:	83 e0       	ldi	r24, 0x03	; 3
 382:	89 8f       	std	Y+25, r24	; 0x19
 384:	ce 01       	movw	r24, r28
 386:	49 96       	adiw	r24, 0x19	; 25
 388:	d7 d0       	rcall	.+430    	; 0x538 <__pack_f>
 38a:	a0 96       	adiw	r28, 0x20	; 32
 38c:	e2 e1       	ldi	r30, 0x12	; 18
 38e:	96 c2       	rjmp	.+1324   	; 0x8bc <__epilogue_restores__>

00000390 <__ltsf2>:
 390:	a8 e1       	ldi	r26, 0x18	; 24
 392:	b0 e0       	ldi	r27, 0x00	; 0
 394:	ed ec       	ldi	r30, 0xCD	; 205
 396:	f1 e0       	ldi	r31, 0x01	; 1
 398:	81 c2       	rjmp	.+1282   	; 0x89c <__prologue_saves__+0x18>
 39a:	69 83       	std	Y+1, r22	; 0x01
 39c:	7a 83       	std	Y+2, r23	; 0x02
 39e:	8b 83       	std	Y+3, r24	; 0x03
 3a0:	9c 83       	std	Y+4, r25	; 0x04
 3a2:	2d 83       	std	Y+5, r18	; 0x05
 3a4:	3e 83       	std	Y+6, r19	; 0x06
 3a6:	4f 83       	std	Y+7, r20	; 0x07
 3a8:	58 87       	std	Y+8, r21	; 0x08
 3aa:	89 e0       	ldi	r24, 0x09	; 9
 3ac:	e8 2e       	mov	r14, r24
 3ae:	f1 2c       	mov	r15, r1
 3b0:	ec 0e       	add	r14, r28
 3b2:	fd 1e       	adc	r15, r29
 3b4:	ce 01       	movw	r24, r28
 3b6:	01 96       	adiw	r24, 0x01	; 1
 3b8:	b7 01       	movw	r22, r14
 3ba:	93 d1       	rcall	.+806    	; 0x6e2 <__unpack_f>
 3bc:	8e 01       	movw	r16, r28
 3be:	0f 5e       	subi	r16, 0xEF	; 239
 3c0:	1f 4f       	sbci	r17, 0xFF	; 255
 3c2:	ce 01       	movw	r24, r28
 3c4:	05 96       	adiw	r24, 0x05	; 5
 3c6:	b8 01       	movw	r22, r16
 3c8:	8c d1       	rcall	.+792    	; 0x6e2 <__unpack_f>
 3ca:	89 85       	ldd	r24, Y+9	; 0x09
 3cc:	82 30       	cpi	r24, 0x02	; 2
 3ce:	38 f0       	brcs	.+14     	; 0x3de <__ltsf2+0x4e>
 3d0:	89 89       	ldd	r24, Y+17	; 0x11
 3d2:	82 30       	cpi	r24, 0x02	; 2
 3d4:	20 f0       	brcs	.+8      	; 0x3de <__ltsf2+0x4e>
 3d6:	c7 01       	movw	r24, r14
 3d8:	b8 01       	movw	r22, r16
 3da:	fb d1       	rcall	.+1014   	; 0x7d2 <__fpcmp_parts_f>
 3dc:	01 c0       	rjmp	.+2      	; 0x3e0 <__ltsf2+0x50>
 3de:	81 e0       	ldi	r24, 0x01	; 1
 3e0:	68 96       	adiw	r28, 0x18	; 24
 3e2:	e6 e0       	ldi	r30, 0x06	; 6
 3e4:	77 c2       	rjmp	.+1262   	; 0x8d4 <__epilogue_restores__+0x18>

000003e6 <__floatsisf>:
 3e6:	a8 e0       	ldi	r26, 0x08	; 8
 3e8:	b0 e0       	ldi	r27, 0x00	; 0
 3ea:	e8 ef       	ldi	r30, 0xF8	; 248
 3ec:	f1 e0       	ldi	r31, 0x01	; 1
 3ee:	53 c2       	rjmp	.+1190   	; 0x896 <__prologue_saves__+0x12>
 3f0:	9b 01       	movw	r18, r22
 3f2:	ac 01       	movw	r20, r24
 3f4:	83 e0       	ldi	r24, 0x03	; 3
 3f6:	89 83       	std	Y+1, r24	; 0x01
 3f8:	da 01       	movw	r26, r20
 3fa:	c9 01       	movw	r24, r18
 3fc:	88 27       	eor	r24, r24
 3fe:	b7 fd       	sbrc	r27, 7
 400:	83 95       	inc	r24
 402:	99 27       	eor	r25, r25
 404:	aa 27       	eor	r26, r26
 406:	bb 27       	eor	r27, r27
 408:	b8 2e       	mov	r11, r24
 40a:	21 15       	cp	r18, r1
 40c:	31 05       	cpc	r19, r1
 40e:	41 05       	cpc	r20, r1
 410:	51 05       	cpc	r21, r1
 412:	19 f4       	brne	.+6      	; 0x41a <__floatsisf+0x34>
 414:	82 e0       	ldi	r24, 0x02	; 2
 416:	89 83       	std	Y+1, r24	; 0x01
 418:	39 c0       	rjmp	.+114    	; 0x48c <__stack+0x2d>
 41a:	88 23       	and	r24, r24
 41c:	a9 f0       	breq	.+42     	; 0x448 <__floatsisf+0x62>
 41e:	20 30       	cpi	r18, 0x00	; 0
 420:	80 e0       	ldi	r24, 0x00	; 0
 422:	38 07       	cpc	r19, r24
 424:	80 e0       	ldi	r24, 0x00	; 0
 426:	48 07       	cpc	r20, r24
 428:	80 e8       	ldi	r24, 0x80	; 128
 42a:	58 07       	cpc	r21, r24
 42c:	29 f4       	brne	.+10     	; 0x438 <__floatsisf+0x52>
 42e:	60 e0       	ldi	r22, 0x00	; 0
 430:	70 e0       	ldi	r23, 0x00	; 0
 432:	80 e0       	ldi	r24, 0x00	; 0
 434:	9f ec       	ldi	r25, 0xCF	; 207
 436:	2e c0       	rjmp	.+92     	; 0x494 <__stack+0x35>
 438:	ee 24       	eor	r14, r14
 43a:	ff 24       	eor	r15, r15
 43c:	87 01       	movw	r16, r14
 43e:	e2 1a       	sub	r14, r18
 440:	f3 0a       	sbc	r15, r19
 442:	04 0b       	sbc	r16, r20
 444:	15 0b       	sbc	r17, r21
 446:	02 c0       	rjmp	.+4      	; 0x44c <__floatsisf+0x66>
 448:	79 01       	movw	r14, r18
 44a:	8a 01       	movw	r16, r20
 44c:	8e e1       	ldi	r24, 0x1E	; 30
 44e:	c8 2e       	mov	r12, r24
 450:	d1 2c       	mov	r13, r1
 452:	dc 82       	std	Y+4, r13	; 0x04
 454:	cb 82       	std	Y+3, r12	; 0x03
 456:	ed 82       	std	Y+5, r14	; 0x05
 458:	fe 82       	std	Y+6, r15	; 0x06
 45a:	0f 83       	std	Y+7, r16	; 0x07
 45c:	18 87       	std	Y+8, r17	; 0x08
 45e:	c8 01       	movw	r24, r16
 460:	b7 01       	movw	r22, r14
 462:	1b d0       	rcall	.+54     	; 0x49a <__clzsi2>
 464:	01 97       	sbiw	r24, 0x01	; 1
 466:	18 16       	cp	r1, r24
 468:	19 06       	cpc	r1, r25
 46a:	84 f4       	brge	.+32     	; 0x48c <__stack+0x2d>
 46c:	08 2e       	mov	r0, r24
 46e:	04 c0       	rjmp	.+8      	; 0x478 <__stack+0x19>
 470:	ee 0c       	add	r14, r14
 472:	ff 1c       	adc	r15, r15
 474:	00 1f       	adc	r16, r16
 476:	11 1f       	adc	r17, r17
 478:	0a 94       	dec	r0
 47a:	d2 f7       	brpl	.-12     	; 0x470 <__stack+0x11>
 47c:	ed 82       	std	Y+5, r14	; 0x05
 47e:	fe 82       	std	Y+6, r15	; 0x06
 480:	0f 83       	std	Y+7, r16	; 0x07
 482:	18 87       	std	Y+8, r17	; 0x08
 484:	c8 1a       	sub	r12, r24
 486:	d9 0a       	sbc	r13, r25
 488:	dc 82       	std	Y+4, r13	; 0x04
 48a:	cb 82       	std	Y+3, r12	; 0x03
 48c:	ba 82       	std	Y+2, r11	; 0x02
 48e:	ce 01       	movw	r24, r28
 490:	01 96       	adiw	r24, 0x01	; 1
 492:	52 d0       	rcall	.+164    	; 0x538 <__pack_f>
 494:	28 96       	adiw	r28, 0x08	; 8
 496:	e9 e0       	ldi	r30, 0x09	; 9
 498:	1a c2       	rjmp	.+1076   	; 0x8ce <__epilogue_restores__+0x12>

0000049a <__clzsi2>:
 49a:	ef 92       	push	r14
 49c:	ff 92       	push	r15
 49e:	0f 93       	push	r16
 4a0:	1f 93       	push	r17
 4a2:	7b 01       	movw	r14, r22
 4a4:	8c 01       	movw	r16, r24
 4a6:	80 e0       	ldi	r24, 0x00	; 0
 4a8:	e8 16       	cp	r14, r24
 4aa:	80 e0       	ldi	r24, 0x00	; 0
 4ac:	f8 06       	cpc	r15, r24
 4ae:	81 e0       	ldi	r24, 0x01	; 1
 4b0:	08 07       	cpc	r16, r24
 4b2:	80 e0       	ldi	r24, 0x00	; 0
 4b4:	18 07       	cpc	r17, r24
 4b6:	88 f4       	brcc	.+34     	; 0x4da <__clzsi2+0x40>
 4b8:	8f ef       	ldi	r24, 0xFF	; 255
 4ba:	e8 16       	cp	r14, r24
 4bc:	f1 04       	cpc	r15, r1
 4be:	01 05       	cpc	r16, r1
 4c0:	11 05       	cpc	r17, r1
 4c2:	31 f0       	breq	.+12     	; 0x4d0 <__clzsi2+0x36>
 4c4:	28 f0       	brcs	.+10     	; 0x4d0 <__clzsi2+0x36>
 4c6:	88 e0       	ldi	r24, 0x08	; 8
 4c8:	90 e0       	ldi	r25, 0x00	; 0
 4ca:	a0 e0       	ldi	r26, 0x00	; 0
 4cc:	b0 e0       	ldi	r27, 0x00	; 0
 4ce:	17 c0       	rjmp	.+46     	; 0x4fe <__clzsi2+0x64>
 4d0:	80 e0       	ldi	r24, 0x00	; 0
 4d2:	90 e0       	ldi	r25, 0x00	; 0
 4d4:	a0 e0       	ldi	r26, 0x00	; 0
 4d6:	b0 e0       	ldi	r27, 0x00	; 0
 4d8:	12 c0       	rjmp	.+36     	; 0x4fe <__clzsi2+0x64>
 4da:	80 e0       	ldi	r24, 0x00	; 0
 4dc:	e8 16       	cp	r14, r24
 4de:	80 e0       	ldi	r24, 0x00	; 0
 4e0:	f8 06       	cpc	r15, r24
 4e2:	80 e0       	ldi	r24, 0x00	; 0
 4e4:	08 07       	cpc	r16, r24
 4e6:	81 e0       	ldi	r24, 0x01	; 1
 4e8:	18 07       	cpc	r17, r24
 4ea:	28 f0       	brcs	.+10     	; 0x4f6 <__clzsi2+0x5c>
 4ec:	88 e1       	ldi	r24, 0x18	; 24
 4ee:	90 e0       	ldi	r25, 0x00	; 0
 4f0:	a0 e0       	ldi	r26, 0x00	; 0
 4f2:	b0 e0       	ldi	r27, 0x00	; 0
 4f4:	04 c0       	rjmp	.+8      	; 0x4fe <__clzsi2+0x64>
 4f6:	80 e1       	ldi	r24, 0x10	; 16
 4f8:	90 e0       	ldi	r25, 0x00	; 0
 4fa:	a0 e0       	ldi	r26, 0x00	; 0
 4fc:	b0 e0       	ldi	r27, 0x00	; 0
 4fe:	20 e2       	ldi	r18, 0x20	; 32
 500:	30 e0       	ldi	r19, 0x00	; 0
 502:	40 e0       	ldi	r20, 0x00	; 0
 504:	50 e0       	ldi	r21, 0x00	; 0
 506:	28 1b       	sub	r18, r24
 508:	39 0b       	sbc	r19, r25
 50a:	4a 0b       	sbc	r20, r26
 50c:	5b 0b       	sbc	r21, r27
 50e:	04 c0       	rjmp	.+8      	; 0x518 <__clzsi2+0x7e>
 510:	16 95       	lsr	r17
 512:	07 95       	ror	r16
 514:	f7 94       	ror	r15
 516:	e7 94       	ror	r14
 518:	8a 95       	dec	r24
 51a:	d2 f7       	brpl	.-12     	; 0x510 <__clzsi2+0x76>
 51c:	f7 01       	movw	r30, r14
 51e:	e8 59       	subi	r30, 0x98	; 152
 520:	ff 4f       	sbci	r31, 0xFF	; 255
 522:	80 81       	ld	r24, Z
 524:	28 1b       	sub	r18, r24
 526:	31 09       	sbc	r19, r1
 528:	41 09       	sbc	r20, r1
 52a:	51 09       	sbc	r21, r1
 52c:	c9 01       	movw	r24, r18
 52e:	1f 91       	pop	r17
 530:	0f 91       	pop	r16
 532:	ff 90       	pop	r15
 534:	ef 90       	pop	r14
 536:	08 95       	ret

00000538 <__pack_f>:
 538:	df 92       	push	r13
 53a:	ef 92       	push	r14
 53c:	ff 92       	push	r15
 53e:	0f 93       	push	r16
 540:	1f 93       	push	r17
 542:	fc 01       	movw	r30, r24
 544:	e4 80       	ldd	r14, Z+4	; 0x04
 546:	f5 80       	ldd	r15, Z+5	; 0x05
 548:	06 81       	ldd	r16, Z+6	; 0x06
 54a:	17 81       	ldd	r17, Z+7	; 0x07
 54c:	d1 80       	ldd	r13, Z+1	; 0x01
 54e:	80 81       	ld	r24, Z
 550:	82 30       	cpi	r24, 0x02	; 2
 552:	48 f4       	brcc	.+18     	; 0x566 <__pack_f+0x2e>
 554:	80 e0       	ldi	r24, 0x00	; 0
 556:	90 e0       	ldi	r25, 0x00	; 0
 558:	a0 e1       	ldi	r26, 0x10	; 16
 55a:	b0 e0       	ldi	r27, 0x00	; 0
 55c:	e8 2a       	or	r14, r24
 55e:	f9 2a       	or	r15, r25
 560:	0a 2b       	or	r16, r26
 562:	1b 2b       	or	r17, r27
 564:	a5 c0       	rjmp	.+330    	; 0x6b0 <__pack_f+0x178>
 566:	84 30       	cpi	r24, 0x04	; 4
 568:	09 f4       	brne	.+2      	; 0x56c <__pack_f+0x34>
 56a:	9f c0       	rjmp	.+318    	; 0x6aa <__pack_f+0x172>
 56c:	82 30       	cpi	r24, 0x02	; 2
 56e:	21 f4       	brne	.+8      	; 0x578 <__pack_f+0x40>
 570:	ee 24       	eor	r14, r14
 572:	ff 24       	eor	r15, r15
 574:	87 01       	movw	r16, r14
 576:	05 c0       	rjmp	.+10     	; 0x582 <__pack_f+0x4a>
 578:	e1 14       	cp	r14, r1
 57a:	f1 04       	cpc	r15, r1
 57c:	01 05       	cpc	r16, r1
 57e:	11 05       	cpc	r17, r1
 580:	19 f4       	brne	.+6      	; 0x588 <__pack_f+0x50>
 582:	e0 e0       	ldi	r30, 0x00	; 0
 584:	f0 e0       	ldi	r31, 0x00	; 0
 586:	96 c0       	rjmp	.+300    	; 0x6b4 <__pack_f+0x17c>
 588:	62 81       	ldd	r22, Z+2	; 0x02
 58a:	73 81       	ldd	r23, Z+3	; 0x03
 58c:	9f ef       	ldi	r25, 0xFF	; 255
 58e:	62 38       	cpi	r22, 0x82	; 130
 590:	79 07       	cpc	r23, r25
 592:	0c f0       	brlt	.+2      	; 0x596 <__pack_f+0x5e>
 594:	5b c0       	rjmp	.+182    	; 0x64c <__pack_f+0x114>
 596:	22 e8       	ldi	r18, 0x82	; 130
 598:	3f ef       	ldi	r19, 0xFF	; 255
 59a:	26 1b       	sub	r18, r22
 59c:	37 0b       	sbc	r19, r23
 59e:	2a 31       	cpi	r18, 0x1A	; 26
 5a0:	31 05       	cpc	r19, r1
 5a2:	2c f0       	brlt	.+10     	; 0x5ae <__pack_f+0x76>
 5a4:	20 e0       	ldi	r18, 0x00	; 0
 5a6:	30 e0       	ldi	r19, 0x00	; 0
 5a8:	40 e0       	ldi	r20, 0x00	; 0
 5aa:	50 e0       	ldi	r21, 0x00	; 0
 5ac:	2a c0       	rjmp	.+84     	; 0x602 <__pack_f+0xca>
 5ae:	b8 01       	movw	r22, r16
 5b0:	a7 01       	movw	r20, r14
 5b2:	02 2e       	mov	r0, r18
 5b4:	04 c0       	rjmp	.+8      	; 0x5be <__pack_f+0x86>
 5b6:	76 95       	lsr	r23
 5b8:	67 95       	ror	r22
 5ba:	57 95       	ror	r21
 5bc:	47 95       	ror	r20
 5be:	0a 94       	dec	r0
 5c0:	d2 f7       	brpl	.-12     	; 0x5b6 <__pack_f+0x7e>
 5c2:	81 e0       	ldi	r24, 0x01	; 1
 5c4:	90 e0       	ldi	r25, 0x00	; 0
 5c6:	a0 e0       	ldi	r26, 0x00	; 0
 5c8:	b0 e0       	ldi	r27, 0x00	; 0
 5ca:	04 c0       	rjmp	.+8      	; 0x5d4 <__pack_f+0x9c>
 5cc:	88 0f       	add	r24, r24
 5ce:	99 1f       	adc	r25, r25
 5d0:	aa 1f       	adc	r26, r26
 5d2:	bb 1f       	adc	r27, r27
 5d4:	2a 95       	dec	r18
 5d6:	d2 f7       	brpl	.-12     	; 0x5cc <__pack_f+0x94>
 5d8:	01 97       	sbiw	r24, 0x01	; 1
 5da:	a1 09       	sbc	r26, r1
 5dc:	b1 09       	sbc	r27, r1
 5de:	8e 21       	and	r24, r14
 5e0:	9f 21       	and	r25, r15
 5e2:	a0 23       	and	r26, r16
 5e4:	b1 23       	and	r27, r17
 5e6:	00 97       	sbiw	r24, 0x00	; 0
 5e8:	a1 05       	cpc	r26, r1
 5ea:	b1 05       	cpc	r27, r1
 5ec:	21 f0       	breq	.+8      	; 0x5f6 <__pack_f+0xbe>
 5ee:	81 e0       	ldi	r24, 0x01	; 1
 5f0:	90 e0       	ldi	r25, 0x00	; 0
 5f2:	a0 e0       	ldi	r26, 0x00	; 0
 5f4:	b0 e0       	ldi	r27, 0x00	; 0
 5f6:	9a 01       	movw	r18, r20
 5f8:	ab 01       	movw	r20, r22
 5fa:	28 2b       	or	r18, r24
 5fc:	39 2b       	or	r19, r25
 5fe:	4a 2b       	or	r20, r26
 600:	5b 2b       	or	r21, r27
 602:	da 01       	movw	r26, r20
 604:	c9 01       	movw	r24, r18
 606:	8f 77       	andi	r24, 0x7F	; 127
 608:	90 70       	andi	r25, 0x00	; 0
 60a:	a0 70       	andi	r26, 0x00	; 0
 60c:	b0 70       	andi	r27, 0x00	; 0
 60e:	80 34       	cpi	r24, 0x40	; 64
 610:	91 05       	cpc	r25, r1
 612:	a1 05       	cpc	r26, r1
 614:	b1 05       	cpc	r27, r1
 616:	39 f4       	brne	.+14     	; 0x626 <__pack_f+0xee>
 618:	27 ff       	sbrs	r18, 7
 61a:	09 c0       	rjmp	.+18     	; 0x62e <__pack_f+0xf6>
 61c:	20 5c       	subi	r18, 0xC0	; 192
 61e:	3f 4f       	sbci	r19, 0xFF	; 255
 620:	4f 4f       	sbci	r20, 0xFF	; 255
 622:	5f 4f       	sbci	r21, 0xFF	; 255
 624:	04 c0       	rjmp	.+8      	; 0x62e <__pack_f+0xf6>
 626:	21 5c       	subi	r18, 0xC1	; 193
 628:	3f 4f       	sbci	r19, 0xFF	; 255
 62a:	4f 4f       	sbci	r20, 0xFF	; 255
 62c:	5f 4f       	sbci	r21, 0xFF	; 255
 62e:	e0 e0       	ldi	r30, 0x00	; 0
 630:	f0 e0       	ldi	r31, 0x00	; 0
 632:	20 30       	cpi	r18, 0x00	; 0
 634:	a0 e0       	ldi	r26, 0x00	; 0
 636:	3a 07       	cpc	r19, r26
 638:	a0 e0       	ldi	r26, 0x00	; 0
 63a:	4a 07       	cpc	r20, r26
 63c:	a0 e4       	ldi	r26, 0x40	; 64
 63e:	5a 07       	cpc	r21, r26
 640:	10 f0       	brcs	.+4      	; 0x646 <__pack_f+0x10e>
 642:	e1 e0       	ldi	r30, 0x01	; 1
 644:	f0 e0       	ldi	r31, 0x00	; 0
 646:	79 01       	movw	r14, r18
 648:	8a 01       	movw	r16, r20
 64a:	27 c0       	rjmp	.+78     	; 0x69a <__pack_f+0x162>
 64c:	60 38       	cpi	r22, 0x80	; 128
 64e:	71 05       	cpc	r23, r1
 650:	64 f5       	brge	.+88     	; 0x6aa <__pack_f+0x172>
 652:	fb 01       	movw	r30, r22
 654:	e1 58       	subi	r30, 0x81	; 129
 656:	ff 4f       	sbci	r31, 0xFF	; 255
 658:	d8 01       	movw	r26, r16
 65a:	c7 01       	movw	r24, r14
 65c:	8f 77       	andi	r24, 0x7F	; 127
 65e:	90 70       	andi	r25, 0x00	; 0
 660:	a0 70       	andi	r26, 0x00	; 0
 662:	b0 70       	andi	r27, 0x00	; 0
 664:	80 34       	cpi	r24, 0x40	; 64
 666:	91 05       	cpc	r25, r1
 668:	a1 05       	cpc	r26, r1
 66a:	b1 05       	cpc	r27, r1
 66c:	39 f4       	brne	.+14     	; 0x67c <__pack_f+0x144>
 66e:	e7 fe       	sbrs	r14, 7
 670:	0d c0       	rjmp	.+26     	; 0x68c <__pack_f+0x154>
 672:	80 e4       	ldi	r24, 0x40	; 64
 674:	90 e0       	ldi	r25, 0x00	; 0
 676:	a0 e0       	ldi	r26, 0x00	; 0
 678:	b0 e0       	ldi	r27, 0x00	; 0
 67a:	04 c0       	rjmp	.+8      	; 0x684 <__pack_f+0x14c>
 67c:	8f e3       	ldi	r24, 0x3F	; 63
 67e:	90 e0       	ldi	r25, 0x00	; 0
 680:	a0 e0       	ldi	r26, 0x00	; 0
 682:	b0 e0       	ldi	r27, 0x00	; 0
 684:	e8 0e       	add	r14, r24
 686:	f9 1e       	adc	r15, r25
 688:	0a 1f       	adc	r16, r26
 68a:	1b 1f       	adc	r17, r27
 68c:	17 ff       	sbrs	r17, 7
 68e:	05 c0       	rjmp	.+10     	; 0x69a <__pack_f+0x162>
 690:	16 95       	lsr	r17
 692:	07 95       	ror	r16
 694:	f7 94       	ror	r15
 696:	e7 94       	ror	r14
 698:	31 96       	adiw	r30, 0x01	; 1
 69a:	87 e0       	ldi	r24, 0x07	; 7
 69c:	16 95       	lsr	r17
 69e:	07 95       	ror	r16
 6a0:	f7 94       	ror	r15
 6a2:	e7 94       	ror	r14
 6a4:	8a 95       	dec	r24
 6a6:	d1 f7       	brne	.-12     	; 0x69c <__pack_f+0x164>
 6a8:	05 c0       	rjmp	.+10     	; 0x6b4 <__pack_f+0x17c>
 6aa:	ee 24       	eor	r14, r14
 6ac:	ff 24       	eor	r15, r15
 6ae:	87 01       	movw	r16, r14
 6b0:	ef ef       	ldi	r30, 0xFF	; 255
 6b2:	f0 e0       	ldi	r31, 0x00	; 0
 6b4:	6e 2f       	mov	r22, r30
 6b6:	67 95       	ror	r22
 6b8:	66 27       	eor	r22, r22
 6ba:	67 95       	ror	r22
 6bc:	90 2f       	mov	r25, r16
 6be:	9f 77       	andi	r25, 0x7F	; 127
 6c0:	d7 94       	ror	r13
 6c2:	dd 24       	eor	r13, r13
 6c4:	d7 94       	ror	r13
 6c6:	8e 2f       	mov	r24, r30
 6c8:	86 95       	lsr	r24
 6ca:	49 2f       	mov	r20, r25
 6cc:	46 2b       	or	r20, r22
 6ce:	58 2f       	mov	r21, r24
 6d0:	5d 29       	or	r21, r13
 6d2:	b7 01       	movw	r22, r14
 6d4:	ca 01       	movw	r24, r20
 6d6:	1f 91       	pop	r17
 6d8:	0f 91       	pop	r16
 6da:	ff 90       	pop	r15
 6dc:	ef 90       	pop	r14
 6de:	df 90       	pop	r13
 6e0:	08 95       	ret

000006e2 <__unpack_f>:
 6e2:	fc 01       	movw	r30, r24
 6e4:	db 01       	movw	r26, r22
 6e6:	40 81       	ld	r20, Z
 6e8:	51 81       	ldd	r21, Z+1	; 0x01
 6ea:	22 81       	ldd	r18, Z+2	; 0x02
 6ec:	62 2f       	mov	r22, r18
 6ee:	6f 77       	andi	r22, 0x7F	; 127
 6f0:	70 e0       	ldi	r23, 0x00	; 0
 6f2:	22 1f       	adc	r18, r18
 6f4:	22 27       	eor	r18, r18
 6f6:	22 1f       	adc	r18, r18
 6f8:	93 81       	ldd	r25, Z+3	; 0x03
 6fa:	89 2f       	mov	r24, r25
 6fc:	88 0f       	add	r24, r24
 6fe:	82 2b       	or	r24, r18
 700:	28 2f       	mov	r18, r24
 702:	30 e0       	ldi	r19, 0x00	; 0
 704:	99 1f       	adc	r25, r25
 706:	99 27       	eor	r25, r25
 708:	99 1f       	adc	r25, r25
 70a:	11 96       	adiw	r26, 0x01	; 1
 70c:	9c 93       	st	X, r25
 70e:	11 97       	sbiw	r26, 0x01	; 1
 710:	21 15       	cp	r18, r1
 712:	31 05       	cpc	r19, r1
 714:	a9 f5       	brne	.+106    	; 0x780 <__unpack_f+0x9e>
 716:	41 15       	cp	r20, r1
 718:	51 05       	cpc	r21, r1
 71a:	61 05       	cpc	r22, r1
 71c:	71 05       	cpc	r23, r1
 71e:	11 f4       	brne	.+4      	; 0x724 <__unpack_f+0x42>
 720:	82 e0       	ldi	r24, 0x02	; 2
 722:	37 c0       	rjmp	.+110    	; 0x792 <__unpack_f+0xb0>
 724:	82 e8       	ldi	r24, 0x82	; 130
 726:	9f ef       	ldi	r25, 0xFF	; 255
 728:	13 96       	adiw	r26, 0x03	; 3
 72a:	9c 93       	st	X, r25
 72c:	8e 93       	st	-X, r24
 72e:	12 97       	sbiw	r26, 0x02	; 2
 730:	9a 01       	movw	r18, r20
 732:	ab 01       	movw	r20, r22
 734:	67 e0       	ldi	r22, 0x07	; 7
 736:	22 0f       	add	r18, r18
 738:	33 1f       	adc	r19, r19
 73a:	44 1f       	adc	r20, r20
 73c:	55 1f       	adc	r21, r21
 73e:	6a 95       	dec	r22
 740:	d1 f7       	brne	.-12     	; 0x736 <__unpack_f+0x54>
 742:	83 e0       	ldi	r24, 0x03	; 3
 744:	8c 93       	st	X, r24
 746:	0d c0       	rjmp	.+26     	; 0x762 <__unpack_f+0x80>
 748:	22 0f       	add	r18, r18
 74a:	33 1f       	adc	r19, r19
 74c:	44 1f       	adc	r20, r20
 74e:	55 1f       	adc	r21, r21
 750:	12 96       	adiw	r26, 0x02	; 2
 752:	8d 91       	ld	r24, X+
 754:	9c 91       	ld	r25, X
 756:	13 97       	sbiw	r26, 0x03	; 3
 758:	01 97       	sbiw	r24, 0x01	; 1
 75a:	13 96       	adiw	r26, 0x03	; 3
 75c:	9c 93       	st	X, r25
 75e:	8e 93       	st	-X, r24
 760:	12 97       	sbiw	r26, 0x02	; 2
 762:	20 30       	cpi	r18, 0x00	; 0
 764:	80 e0       	ldi	r24, 0x00	; 0
 766:	38 07       	cpc	r19, r24
 768:	80 e0       	ldi	r24, 0x00	; 0
 76a:	48 07       	cpc	r20, r24
 76c:	80 e4       	ldi	r24, 0x40	; 64
 76e:	58 07       	cpc	r21, r24
 770:	58 f3       	brcs	.-42     	; 0x748 <__unpack_f+0x66>
 772:	14 96       	adiw	r26, 0x04	; 4
 774:	2d 93       	st	X+, r18
 776:	3d 93       	st	X+, r19
 778:	4d 93       	st	X+, r20
 77a:	5c 93       	st	X, r21
 77c:	17 97       	sbiw	r26, 0x07	; 7
 77e:	08 95       	ret
 780:	2f 3f       	cpi	r18, 0xFF	; 255
 782:	31 05       	cpc	r19, r1
 784:	79 f4       	brne	.+30     	; 0x7a4 <__unpack_f+0xc2>
 786:	41 15       	cp	r20, r1
 788:	51 05       	cpc	r21, r1
 78a:	61 05       	cpc	r22, r1
 78c:	71 05       	cpc	r23, r1
 78e:	19 f4       	brne	.+6      	; 0x796 <__unpack_f+0xb4>
 790:	84 e0       	ldi	r24, 0x04	; 4
 792:	8c 93       	st	X, r24
 794:	08 95       	ret
 796:	64 ff       	sbrs	r22, 4
 798:	03 c0       	rjmp	.+6      	; 0x7a0 <__unpack_f+0xbe>
 79a:	81 e0       	ldi	r24, 0x01	; 1
 79c:	8c 93       	st	X, r24
 79e:	12 c0       	rjmp	.+36     	; 0x7c4 <__unpack_f+0xe2>
 7a0:	1c 92       	st	X, r1
 7a2:	10 c0       	rjmp	.+32     	; 0x7c4 <__unpack_f+0xe2>
 7a4:	2f 57       	subi	r18, 0x7F	; 127
 7a6:	30 40       	sbci	r19, 0x00	; 0
 7a8:	13 96       	adiw	r26, 0x03	; 3
 7aa:	3c 93       	st	X, r19
 7ac:	2e 93       	st	-X, r18
 7ae:	12 97       	sbiw	r26, 0x02	; 2
 7b0:	83 e0       	ldi	r24, 0x03	; 3
 7b2:	8c 93       	st	X, r24
 7b4:	87 e0       	ldi	r24, 0x07	; 7
 7b6:	44 0f       	add	r20, r20
 7b8:	55 1f       	adc	r21, r21
 7ba:	66 1f       	adc	r22, r22
 7bc:	77 1f       	adc	r23, r23
 7be:	8a 95       	dec	r24
 7c0:	d1 f7       	brne	.-12     	; 0x7b6 <__unpack_f+0xd4>
 7c2:	70 64       	ori	r23, 0x40	; 64
 7c4:	14 96       	adiw	r26, 0x04	; 4
 7c6:	4d 93       	st	X+, r20
 7c8:	5d 93       	st	X+, r21
 7ca:	6d 93       	st	X+, r22
 7cc:	7c 93       	st	X, r23
 7ce:	17 97       	sbiw	r26, 0x07	; 7
 7d0:	08 95       	ret

000007d2 <__fpcmp_parts_f>:
 7d2:	1f 93       	push	r17
 7d4:	dc 01       	movw	r26, r24
 7d6:	fb 01       	movw	r30, r22
 7d8:	9c 91       	ld	r25, X
 7da:	92 30       	cpi	r25, 0x02	; 2
 7dc:	08 f4       	brcc	.+2      	; 0x7e0 <__fpcmp_parts_f+0xe>
 7de:	47 c0       	rjmp	.+142    	; 0x86e <__fpcmp_parts_f+0x9c>
 7e0:	80 81       	ld	r24, Z
 7e2:	82 30       	cpi	r24, 0x02	; 2
 7e4:	08 f4       	brcc	.+2      	; 0x7e8 <__fpcmp_parts_f+0x16>
 7e6:	43 c0       	rjmp	.+134    	; 0x86e <__fpcmp_parts_f+0x9c>
 7e8:	94 30       	cpi	r25, 0x04	; 4
 7ea:	51 f4       	brne	.+20     	; 0x800 <__fpcmp_parts_f+0x2e>
 7ec:	11 96       	adiw	r26, 0x01	; 1
 7ee:	1c 91       	ld	r17, X
 7f0:	84 30       	cpi	r24, 0x04	; 4
 7f2:	99 f5       	brne	.+102    	; 0x85a <__fpcmp_parts_f+0x88>
 7f4:	81 81       	ldd	r24, Z+1	; 0x01
 7f6:	68 2f       	mov	r22, r24
 7f8:	70 e0       	ldi	r23, 0x00	; 0
 7fa:	61 1b       	sub	r22, r17
 7fc:	71 09       	sbc	r23, r1
 7fe:	3f c0       	rjmp	.+126    	; 0x87e <__fpcmp_parts_f+0xac>
 800:	84 30       	cpi	r24, 0x04	; 4
 802:	21 f0       	breq	.+8      	; 0x80c <__fpcmp_parts_f+0x3a>
 804:	92 30       	cpi	r25, 0x02	; 2
 806:	31 f4       	brne	.+12     	; 0x814 <__fpcmp_parts_f+0x42>
 808:	82 30       	cpi	r24, 0x02	; 2
 80a:	b9 f1       	breq	.+110    	; 0x87a <__fpcmp_parts_f+0xa8>
 80c:	81 81       	ldd	r24, Z+1	; 0x01
 80e:	88 23       	and	r24, r24
 810:	89 f1       	breq	.+98     	; 0x874 <__fpcmp_parts_f+0xa2>
 812:	2d c0       	rjmp	.+90     	; 0x86e <__fpcmp_parts_f+0x9c>
 814:	11 96       	adiw	r26, 0x01	; 1
 816:	1c 91       	ld	r17, X
 818:	11 97       	sbiw	r26, 0x01	; 1
 81a:	82 30       	cpi	r24, 0x02	; 2
 81c:	f1 f0       	breq	.+60     	; 0x85a <__fpcmp_parts_f+0x88>
 81e:	81 81       	ldd	r24, Z+1	; 0x01
 820:	18 17       	cp	r17, r24
 822:	d9 f4       	brne	.+54     	; 0x85a <__fpcmp_parts_f+0x88>
 824:	12 96       	adiw	r26, 0x02	; 2
 826:	2d 91       	ld	r18, X+
 828:	3c 91       	ld	r19, X
 82a:	13 97       	sbiw	r26, 0x03	; 3
 82c:	82 81       	ldd	r24, Z+2	; 0x02
 82e:	93 81       	ldd	r25, Z+3	; 0x03
 830:	82 17       	cp	r24, r18
 832:	93 07       	cpc	r25, r19
 834:	94 f0       	brlt	.+36     	; 0x85a <__fpcmp_parts_f+0x88>
 836:	28 17       	cp	r18, r24
 838:	39 07       	cpc	r19, r25
 83a:	bc f0       	brlt	.+46     	; 0x86a <__fpcmp_parts_f+0x98>
 83c:	14 96       	adiw	r26, 0x04	; 4
 83e:	8d 91       	ld	r24, X+
 840:	9d 91       	ld	r25, X+
 842:	0d 90       	ld	r0, X+
 844:	bc 91       	ld	r27, X
 846:	a0 2d       	mov	r26, r0
 848:	24 81       	ldd	r18, Z+4	; 0x04
 84a:	35 81       	ldd	r19, Z+5	; 0x05
 84c:	46 81       	ldd	r20, Z+6	; 0x06
 84e:	57 81       	ldd	r21, Z+7	; 0x07
 850:	28 17       	cp	r18, r24
 852:	39 07       	cpc	r19, r25
 854:	4a 07       	cpc	r20, r26
 856:	5b 07       	cpc	r21, r27
 858:	18 f4       	brcc	.+6      	; 0x860 <__fpcmp_parts_f+0x8e>
 85a:	11 23       	and	r17, r17
 85c:	41 f0       	breq	.+16     	; 0x86e <__fpcmp_parts_f+0x9c>
 85e:	0a c0       	rjmp	.+20     	; 0x874 <__fpcmp_parts_f+0xa2>
 860:	82 17       	cp	r24, r18
 862:	93 07       	cpc	r25, r19
 864:	a4 07       	cpc	r26, r20
 866:	b5 07       	cpc	r27, r21
 868:	40 f4       	brcc	.+16     	; 0x87a <__fpcmp_parts_f+0xa8>
 86a:	11 23       	and	r17, r17
 86c:	19 f0       	breq	.+6      	; 0x874 <__fpcmp_parts_f+0xa2>
 86e:	61 e0       	ldi	r22, 0x01	; 1
 870:	70 e0       	ldi	r23, 0x00	; 0
 872:	05 c0       	rjmp	.+10     	; 0x87e <__fpcmp_parts_f+0xac>
 874:	6f ef       	ldi	r22, 0xFF	; 255
 876:	7f ef       	ldi	r23, 0xFF	; 255
 878:	02 c0       	rjmp	.+4      	; 0x87e <__fpcmp_parts_f+0xac>
 87a:	60 e0       	ldi	r22, 0x00	; 0
 87c:	70 e0       	ldi	r23, 0x00	; 0
 87e:	cb 01       	movw	r24, r22
 880:	1f 91       	pop	r17
 882:	08 95       	ret

00000884 <__prologue_saves__>:
 884:	2f 92       	push	r2
 886:	3f 92       	push	r3
 888:	4f 92       	push	r4
 88a:	5f 92       	push	r5
 88c:	6f 92       	push	r6
 88e:	7f 92       	push	r7
 890:	8f 92       	push	r8
 892:	9f 92       	push	r9
 894:	af 92       	push	r10
 896:	bf 92       	push	r11
 898:	cf 92       	push	r12
 89a:	df 92       	push	r13
 89c:	ef 92       	push	r14
 89e:	ff 92       	push	r15
 8a0:	0f 93       	push	r16
 8a2:	1f 93       	push	r17
 8a4:	cf 93       	push	r28
 8a6:	df 93       	push	r29
 8a8:	cd b7       	in	r28, 0x3d	; 61
 8aa:	de b7       	in	r29, 0x3e	; 62
 8ac:	ca 1b       	sub	r28, r26
 8ae:	db 0b       	sbc	r29, r27
 8b0:	0f b6       	in	r0, 0x3f	; 63
 8b2:	f8 94       	cli
 8b4:	de bf       	out	0x3e, r29	; 62
 8b6:	0f be       	out	0x3f, r0	; 63
 8b8:	cd bf       	out	0x3d, r28	; 61
 8ba:	09 94       	ijmp

000008bc <__epilogue_restores__>:
 8bc:	2a 88       	ldd	r2, Y+18	; 0x12
 8be:	39 88       	ldd	r3, Y+17	; 0x11
 8c0:	48 88       	ldd	r4, Y+16	; 0x10
 8c2:	5f 84       	ldd	r5, Y+15	; 0x0f
 8c4:	6e 84       	ldd	r6, Y+14	; 0x0e
 8c6:	7d 84       	ldd	r7, Y+13	; 0x0d
 8c8:	8c 84       	ldd	r8, Y+12	; 0x0c
 8ca:	9b 84       	ldd	r9, Y+11	; 0x0b
 8cc:	aa 84       	ldd	r10, Y+10	; 0x0a
 8ce:	b9 84       	ldd	r11, Y+9	; 0x09
 8d0:	c8 84       	ldd	r12, Y+8	; 0x08
 8d2:	df 80       	ldd	r13, Y+7	; 0x07
 8d4:	ee 80       	ldd	r14, Y+6	; 0x06
 8d6:	fd 80       	ldd	r15, Y+5	; 0x05
 8d8:	0c 81       	ldd	r16, Y+4	; 0x04
 8da:	1b 81       	ldd	r17, Y+3	; 0x03
 8dc:	aa 81       	ldd	r26, Y+2	; 0x02
 8de:	b9 81       	ldd	r27, Y+1	; 0x01
 8e0:	ce 0f       	add	r28, r30
 8e2:	d1 1d       	adc	r29, r1
 8e4:	0f b6       	in	r0, 0x3f	; 63
 8e6:	f8 94       	cli
 8e8:	de bf       	out	0x3e, r29	; 62
 8ea:	0f be       	out	0x3f, r0	; 63
 8ec:	cd bf       	out	0x3d, r28	; 61
 8ee:	ed 01       	movw	r28, r26
 8f0:	08 95       	ret

000008f2 <_exit>:
 8f2:	f8 94       	cli

000008f4 <__stop_program>:
 8f4:	ff cf       	rjmp	.-2      	; 0x8f4 <__stop_program>
